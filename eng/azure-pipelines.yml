trigger:
  batch: true
  branches:
    include:
    - dotnet/main
    - dotnet/release/*

pr: none

variables:
- template: /eng/common-variables.yml@self
- template: /eng/common/templates-official/variables/pool-providers.yml@self

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      tsa:
        enabled: true
      policheck:
        enabled: true
        exclusionsFile: $(Build.SourcesDirectory)\.config\PoliCheckExclusions.xml
      credscan:
        suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022
        os: windows
    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enablePublishBuildArtifacts: true
          enablePublishBuildAssets: true
          enablePublishUsingPipelines: true
          jobs:

          ############ MACOS x64 BUILD ############
          - job: Build_macOS_x64
            displayName: macOS_x64
            timeoutInMinutes: 120
            pool:
              name: Azure Pipelines
              image: macos-13 # when bumping this also change the brew tags in cpython.proj
              os: macOS
            steps:
            - script: |
                git clean -ffdx
                git reset --hard HEAD
              displayName: 'Clean up working directory'

            - bash: |
                ./build.sh --ci --restore --build --pack --arch x64 --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:RestoreUsingNuGetTargets=false /p:ProvisionUniversalDependencies=true
              displayName: 'Build and package'

            - bash:
                ./eng/common/build.sh --ci --restore --publish --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=osx /p:PlatformName=x64 --projects $(Build.SourcesDirectory)/cpython.proj
              displayName: Publish packages
              condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

            # Broken symbolic links break the SBOM processing, remove them
            - bash: |
                for f in $(find . -type l -exec test ! -e {} \; -print); do
                  echo "Deleting broken symlink $f"
                  rm "$f"
                done
              displayName: Remove broken symbolic links

          ############ MACOS arm64 BUILD ############
          - job: Build_macOS_arm64
            displayName: macOS_arm64
            timeoutInMinutes: 120
            pool:
              name: Azure Pipelines
              image: macos-13 # when bumping this also change the brew tags in cpython.proj
              os: macOS
            steps:
            - script: |
                git clean -ffdx
                git reset --hard HEAD
              displayName: 'Clean up working directory'

            - bash: |
                ./build.sh --ci --restore --build --pack --arch arm64 --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:RestoreUsingNuGetTargets=false /p:ProvisionUniversalDependencies=true
              displayName: 'Build and package'

            - bash:
                ./eng/common/build.sh --ci --restore --publish --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=osx /p:PlatformName=arm64 --projects $(Build.SourcesDirectory)/cpython.proj
              displayName: Publish packages
              condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

            # Broken symbolic links break the SBOM processing, remove them
            - bash: |
                for f in $(find . -type l -exec test ! -e {} \; -print); do
                  echo "Deleting broken symlink $f"
                  rm "$f"
                done
              displayName: Remove broken symbolic links

          ############ WINDOWS x64 BUILD ############
          - job: Build_Windows_x64
            displayName: Windows_x64
            timeoutInMinutes: 120
            pool:
              name: $(DncEngInternalBuildPool)
              image: 1es-windows-2022
              os: windows
            steps:
            - script: |
                git clean -ffdx
                git reset --hard HEAD
              displayName: 'Clean up working directory'

            - powershell: eng\build.ps1 -ci -restore -build -pack -arch x64 -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:RestoreUsingNuGetTargets=false
              displayName: 'Build and package'

            - powershell: eng\common\build.ps1 -ci -restore -publish -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=win /p:PlatformName=x64 -projects $(Build.SourcesDirectory)\cpython.proj
              displayName: Publish packages
              condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

          ############ WINDOWS arm64 BUILD ############
          - job: Build_Windows_arm64
            displayName: Windows_arm64
            timeoutInMinutes: 120
            pool:
              name: $(DncEngInternalBuildPool)
              image: 1es-windows-2022
              os: windows
            steps:
            - script: |
                git clean -ffdx
                git reset --hard HEAD
              displayName: 'Clean up working directory'

            - powershell: eng\build.ps1 -ci -restore -build -pack -arch arm64 -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:RestoreUsingNuGetTargets=false
              displayName: 'Build and package'

            - powershell: eng\common\build.ps1 -ci -restore -publish -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=win /p:PlatformName=arm64 -projects $(Build.SourcesDirectory)\cpython.proj
              displayName: Publish packages
              condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

    ############ POST BUILD ARCADE LOGIC ############
    - template: /eng/common/templates-official/post-build/post-build.yml@self
      parameters:
        enableSourceLinkValidation: false
        enableSigningValidation: false
        enableSymbolValidation: false
        enableNugetValidation: true
